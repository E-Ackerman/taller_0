public class taller_0 {
	
       public static void leerClientes(String []nombre, String []apellido, String []rut, String []contraseña, int []saldo) throws Exception
    {
	BufferedReader arch1=new BufferedReader(new FileReader("clientes.txt"));
	String linea;
	int i = 0;
	while ((linea = arch1.readLine()) !=null) {
            String[] elementos = linea.split(",");
			
            nombre[i] = elementos[0];
            apellido[i] = elementos[1];
            rut[i] = listatoString(sinSignos(elementos[2]));
            contraseña[i] = elementos[3];
            saldo[i] = Integer.parseInt(elementos[4]);
            i++;
			
	}
	arch1.close();
    }
	
    public static void leerStatus(String[] rut, String[] estado) throws Exception{
	BufferedReader arch2=new BufferedReader(new FileReader("status.txt"));
	String linea;
	int i = 0;
	while ((linea = arch2.readLine()) !=null) {
            String[] elementos = linea.split(",");
            rut[i]= listatoString(sinSignos(elementos[0]));
            estado[i] = elementos[1];
            i++;
        }	
	arch2.close();
    }
        
    public static void leerPeliculas(String[] pelicula, String[] estreno, int[] recaudacion,String[][] horario) throws FileNotFoundException
    {
        Scanner scanner = new Scanner(new File("peliculas.txt"));
            
        int i=0;
        while (scanner.hasNextLine()) 
        {
            String linea = scanner.nextLine();
            String[] partes = linea.split(",");
            pelicula[i] = partes[0];
            estreno[i] = partes[1];
            recaudacion[i] = Integer.valueOf(partes[2]);
            int f = 0;
            for (int a=3; a<partes.length;a++) // recorre la ultima parte de la linea referente a la sala y el horario
            {
                if(!partes[a].equals("M") && !partes[a].equals("T")) 
                {
                    f = Integer.valueOf(partes[a])-1; // la primera entrada indica el numero de la sala, la cual para ubicarla en la matriz se le resta 1
                }
                else // pasa a la segunda entrada de texto que indica si es mañana o tarde
                {
                    if (partes[a].equals("M")) 
                    {
                        horario[f][0] = pelicula[i]; //aqui se guarda la pelicula en la sala predeterminada y con el horario de mañana 
                    }
                    else 
                    {
                        horario[f][1] = pelicula[i]; //aqui se guarda la pelicula en la sala predeterminada y con el horario de tarde 
                    }
                } 
            }
                
            i++;    
        }
        scanner.close();
    }
    
    public static boolean verificarRut(String rut) 
    {
        String[] lista = sinSignos(rut);
        
        int cte = 2;
        int suma=0;
        int n=2;
        
        if (lista[lista.length-1] == null) 
        {
            n = 3;
        }
         
        for (int a=lista.length-n;a>=0;a--) 
        {
            suma += (Integer.valueOf(lista[a]) * cte);
            cte +=1;
            if (cte == 8)
            {
                cte = 2;
            }
        }
        
        int resul = 11 - (suma % 11);
        String DV = lista[lista.length - (n-1)].toUpperCase();
        boolean bool= false;
        
        if (resul == 11 && DV.equals("0")) 
        {
            bool = true;
        }
        else if (resul == 10 && DV.equals("K")) 
        {
            bool = true;
        }
        else if ((resul >= 1 && resul <= 9 ) && ((String.valueOf(resul)).equals(lista[lista.length-(n-1)])) ) 
        {
            bool = true;
        }        
        return bool;
   
    }

    public static String[] sinSignos(String rut) 
    {
        String[] partes = rut.split("");
        String[] lista = new String[9];
        
        int j=0;
        for (int i=0;i<partes.length;i++) 
        {
            if(!(partes[i].equals(".") || partes[i].equals("-")) && partes[i] != null) 
            {
                lista[j] = partes[i];
                j++;
            }
        }
        return lista;
    }
    
    public static String listatoString(String[] lista) 
    {
        String string = "";
        for (int a=0; a<lista.length;a++) 
        {
            if (lista[a] != null) 
            {
               string += lista[a].toUpperCase(); 
            }
        }
        
        return string;
    }

    public static void registrarCliente(String []nombre,String []apellido, String []rut, String []contraseña, int []saldo, String nombreI, String apellidoI, String rutI, String contraseñaI) 
    {
        for (int a=0; a<nombre.length;a++) 
        {
            if (nombre[a] == null) 
            {
                nombre[a] = nombreI;
                apellido[a] = apellidoI;
                rut[a] = rutI;
                contraseña[a] = contraseñaI;
                saldo[a] = 0;
                break;
            }
        }
    }
    
    public static boolean verificarDatos(String []rut,String []contraseña, String rutI, String contra) 
    {
        for (int a=0; a<rut.length;a++) 
        {
            if(rut[a] != null)
            {
                if(rutI.equals(rut[a]) && contra.equals(contraseña[a])) 
                {
                    return true;
                }
            }    
        }
        
        return false;
    }
    
    public static String desplegarHorario (String pelicula, String[][] horario) 
    {
        String salida ="";
        for(int a=0;a<3;a++) 
        {
            for (int b=0;b<2;b++) 
            {
                if (pelicula.equals(horario[a][b])) 
                {
                    if (b == 0) 
                    {
                        salida += " - Sala " + (a+1) + " en la mañana"; 
                    }
                    else 
                    {
                        salida += " - Sala " + (a+1) + " en la tarde"; 
                    }    
                }    
            }
        }
        
        return salida;
    }
    
    public static String desplegarCartelera(String[][] horario) 
    {
        String salida = "";
        for (int a=0; a<3;a++) 
        {
            for (int b=0;b<2;b++) 
            {
                if (horario[a][b] != null) 
                {
                    if (b==0) 
                    {
                        salida += "Sala " + (a+1) + ": Pelicula " + horario[a][b] + " en la mañana\n";
                    }
                    else 
                    {
                        salida += "Sala " + (a+1) + ": Pelicula " + horario[a][b] + " en la tarde\n";
                    }
                }    
            }
        }
        
        return salida;
    }
    
    public static int[][] crearMatriz() 
    {
        int[][] matriz = new int[10][30];
        for(int a=0;a<10;a++) 
        {
            for(int b=0;b<30;b++) 
            {
                if ((b>4 && b<25) || a>3) 
                {
                    matriz[a][b] = 1;
                }
            }
        }
        
        return matriz;
    }
    
    public static String desplegarAsientos(int[][] matriz, String[] letras) 
    {
        String salida = "Asientos disponibles: ";
        for (int a=0;a<10;a++) 
        {
            for(int b=0;b<30;b++) 
            {
                if(matriz[a][b] !=0 && matriz[a][b] != -1) 
                {
                    salida += "  " + letras[a] +"-" + (b+1);
                    
                }
            }
        }
        return salida;
    }
    
    public static int[][] seleccionar(int[][] sala1M,int[][] sala1T ,int[][] sala2M, int[][] sala2T, int[][] sala3M, int[][] sala3T, int sala, String hora, String[] letras) 
    {
        if(sala == 1 && hora.equals("MAÑANA")) 
        {
            System.out.println(desplegarAsientos(sala1M,letras));
            return sala1M;
        }
        else if(sala == 1 && hora.equals("TARDE")) 
        {
            System.out.println(desplegarAsientos(sala1T,letras));
            return sala1T;
        }
        else if(sala == 2 && hora.equals("MAÑANA")) 
        {
            System.out.println(desplegarAsientos(sala2M,letras));
            return sala2M;
        }
        else if(sala == 2 && hora.equals("TARDE")) 
        {
            System.out.println(desplegarAsientos(sala2T,letras));
            return sala2T;
        }
        else if(sala == 3 && hora.equals("MAÑANA")) 
        {
            System.out.println(desplegarAsientos(sala3M,letras));
            return sala3M;
        }
        else 
        {
            System.out.println(desplegarAsientos(sala3T,letras));
            return sala3T;
        }           
    }
    
    public static boolean comprobarEntrada(String entrada, int[][] salaSelec, String[] letras) 
    {
        String[] lista = sinSignos(entrada);
        int fila = 0;
        String columna = "";
        for (int i=0; i<3;i++) 
        {
            if (lista[i] != null) 
            {
                for (int f=0; f<10;f++) 
                {
                    if (lista[i].equals(letras[f])) 
                    {
                        fila = f;
                        break;
                    }
                    else 
                    {
                        columna += lista[i];
                        break;
                    }
                }
            }
        }
        int c= Integer.valueOf(columna) - 1;
        
        for(int a=0;a<10;a++) 
        {
            for(int b=0;b<30;b++) 
            {
                if ((salaSelec[fila][c+1] == 1 || salaSelec[fila][c+1] == 0) && (salaSelec[fila][c-1] == 1 || salaSelec[fila][c+1] == 0) && salaSelec[fila][c] == 1) 
                {
                    return true;
                }
            }
            
        }
        return false;
    }
    
    public static int buscarIndice(String peli, String[] peliculas) 
    {
        int salida = -1;
        
        for(int a=0;a<peliculas.length;a++) 
        {
            if(peli.equals(peliculas[a])) 
            {
                return a;
            }
        }
        return salida;
    }
    
    public static int calcularCompra(int cantEntradas, int indPeli, String[] estreno, String[] estado, int indRutPeli) 
    {
        int salida=0;
        for(int a=0;a<cantEntradas;a++) 
        {
            if (estreno[indPeli].equals("estreno")) 
            {
                salida += 5500;
            }
            else 
            {
                salida += 4000;
            }
        }
        
        if (estado[indRutPeli].equals("HABILITADO")) 
        {
            salida = (int) (salida*0.85);
        }
        
        return salida;
    }
    
    public static void confirmarCompra(int[] recaudacion, int[] recaudadoDia, int[][] recaudadoXHorario, int indPeli,String peli ,String hora,String entrada,int cantEntradas, int[] saldo, int indRut, int compra,String[] nombrePelicula,String[] horarioPelicula,String[][] asientosPelicula,int indice) 
    {
        recaudacion[indPeli] += compra;
        recaudadoDia[indPeli] += compra;
        if (hora.equals("MAÑANA")) 
        {
            recaudadoXHorario[0][0] += compra;
        }
        else 
        {
            recaudadoXHorario[0][1] += compra;
        }
        saldo[indRut] -= compra;
        
        nombrePelicula[indice] = peli;
        horarioPelicula[indice] = hora;
        for(int i=0;i<cantEntradas;i++) 
        {
            asientosPelicula[indice][i] = entrada;
        }    
    }
    
    public static String informacionCliente(int indRut,String []nombre,String []apellido,String []rut,int []saldo,String[] nombrePelicula,String[] horarioPelicula,String[][] asientosPelicula) 
    {
        String salida = "\n";
        salida += nombre[indRut] + " "+ apellido[indRut]+ " con RUT: "+rut[indRut]+ " y saldo de $"+ saldo[indRut] + "\nEntradas: ";
        
        for(int a=0;a<nombrePelicula.length;a++) 
        {
            if (nombrePelicula[a]!= null) 
            {
                salida += "\n- "+nombrePelicula[a] + " con horario de " + horarioPelicula[a] + " con los siguientes asientos:";
                
                for(int b=0;b<20;b++) 
                {
                    if(asientosPelicula[a][b] != null) 
                    {
                        salida += " "+ asientosPelicula[a][b];
                    }
                }
            }
        }
        
        return salida;
    }
    
    public static String desplegarTaquilla(String[] pelicula,int[] recaudacion,int[] recaudadoDia,int[][] recaudadoXHorario)
    {
        String salida="";
        
        for(int a=0;a<pelicula.length;a++) 
        {
            if(pelicula[a] != null) 
            {
                salida += "\n- La pelicula "+ pelicula[a] + " tiene como monto recaudado total $"+ recaudacion[a] + " y el monto recaudado del dia es $" + recaudadoDia[a];
            }
        }
        salida += "\n El monto total recaudado por la mañana es de $" + recaudadoXHorario[0][0] + " y por la tarde es de $" + recaudadoXHorario[0][1];
        
        return salida;
    }

    public static void main(String[] args) throws Exception 
    {
        Scanner read = new Scanner(System.in);
        
        String []nombre= new String[1000];
        String []apellido = new String[1000];
        String []rut= new String[1000];
        String []contraseña= new String[1000];
        int []saldo = new int[1000];
        
        leerClientes(nombre,apellido,rut,contraseña,saldo);
        
        String[] rutStatus = new String[1000];
        String[] estado = new String[1000];
        
        leerStatus(rutStatus,estado);
        
        String[] pelicula = new String[1000];
        String[] estreno= new String[1000]; 
        int[] recaudacion = new int[1000];
        String[][] horario = new String[3][2]; // 3 salas y 2 funciones por sala(mañana y tarde)
        
        leerPeliculas(pelicula,estreno,recaudacion,horario);
        
        String[] letras = new String[10]; letras[0] = "A"; letras[1] = "B"; letras[2] = "C"; letras[3] = "D"; letras[4] = "E"; letras[5] = "F"; letras[6] = "G"; letras[7] = "H"; letras[8]= "I"; letras[9] ="J";
        int[][] sala1M = crearMatriz();
        int[][] sala1T = crearMatriz();
        int[][] sala2M = crearMatriz();
        int[][] sala2T = crearMatriz();
        int[][] sala3M = crearMatriz();
        int[][] sala3T = crearMatriz();
        
        String[] nombrePelicula = new String[20];
        String[] horarioPelicula = new String[20];
        String[][] asientosPelicula = new String[20][20];
        int indice =0;
        
        int[] recaudadoDia = new int[1000];
        int[][] recaudadoXHorario = new int[1][2];
        
        
        System.out.print("Desea cerrar el sistema? (SI) (NO): ");
        String respuesta = "";
        respuesta = read.next().toUpperCase();
        
        while (!respuesta.equals("SI") && !respuesta.equals("NO")) 
        {
            System.out.println("\n--- El texto ingresado es incorrecto ---");
            System.out.print("\nDesea cerrar el sistema? (SI) (NO): ");
            respuesta = read.next().toUpperCase();
        }
        
        while (respuesta.equals("NO")) 
        {
            
            String rutInicio = "";
            String contra = "";
            System.out.println("\nMENU DE INICIO DE SESION\n");
            System.out.print("Desea: \n1) Iniciar sesion \n2) Registrarse\n");
            System.out.print("\nIngrese una opción: ");
            String opcion = read.next();
    
            while(!opcion.equals("1") && !opcion.equals("2")) 
            {
                System.out.println("--- La opcion ingresada no existe ---");
                System.out.print("Ingrese una opcion: ");
                opcion = read.next();
            }
            System.out.println();

            if (opcion.equals("1")) 
            {
                System.out.println("  INICIO DE SESION");
                System.out.print("\nIngrese su rut: ");
                rutInicio = listatoString(sinSignos(read.next()));
                System.out.print("Ingrese su contraseña: ");
                contra = read.next();
            
                if(!rutInicio.equals("ADMIN") && !contra.equals("ADMIN"))
                {    
                    while(!verificarRut(rutInicio) || !verificarDatos(rut,contraseña,rutInicio,contra)) 
                    {
                        System.out.println("\n--- Rut y/o contraseña incorrectos ---");
                        System.out.print("\nIngrese su rut: ");
                        rutInicio = listatoString(sinSignos(read.next()));
                        System.out.print("Ingrese su contraseña: ");
                        contra = read.next();
                    }
                }
            }
        
            else 
            {

                System.out.println("   REGISTRO");                
                System.out.print("\nIngrese su nombre: ");
                String nombreRegistro = read.next();
                System.out.print("Ingrese su apellido: ");
                String apellidoRegistro = read.next();
                System.out.print("Ingrese su rut: ");
                String rutRegistro = listatoString(sinSignos(read.next()));
                while (!verificarRut(rutRegistro)) 
                {
                    System.out.println("--- Ingrese un rut correcto ---");
                    System.out.print("Ingrese su rut: ");
                    rutRegistro = listatoString(sinSignos(read.next()));
                }
                System.out.print("Ingrese su nueva contraseña: ");
                String contra1 = read.next();

                registrarCliente(nombre,apellido,rut,contraseña,saldo, nombreRegistro,apellidoRegistro,rutRegistro,contra1);
                
                System.out.println("\n  INICIO DE SESION");
                System.out.print("\nIngrese su rut: ");
                rutInicio = listatoString(sinSignos(read.next()));
                System.out.print("Ingrese su contraseña: ");
                contra = read.next();

                if(!rutInicio.equals("ADMIN") && !contra.equals("ADMIN"))
                {    
                    while(!verificarRut(rutInicio) || !verificarDatos(rut,contraseña,rutInicio,contra)) 
                    {
                        System.out.println("\n--- Rut y/o contraseña incorrectos ---");
                        System.out.print("\nIngrese su rut: ");
                        rutInicio = listatoString(sinSignos(read.next()));
                        System.out.print("Ingrese su contraseña: ");
                        contra = read.next();
                    }
                }

            }

            // MENU CLIENTE
            
            if (!rutInicio.equals("ADMIN") && !contra.equals("ADMIN")) 
            {
                int indRut = buscarIndice(rutInicio,rut);
                String op1 ="";
                while(!op1.equals("e")) 
                {
                    System.out.println("\n      MENU CLIENTE\n    \na)Comprar entrada \nb)Información usuario \nc)Devolución entrada \nd)Cartelera \ne)Cerrar sesion\n");
                    System.out.print("Ingrese una opcion: ");
                    op1= read.next().toLowerCase();
                    while (!op1.equals("a") && !op1.equals("b") && !op1.equals("c") && !op1.equals("d") && !op1.equals("e")) 
                    {
                        System.out.println("\n--- Opción ingresada incorrecta ---");
                        System.out.print("Ingrese una opcion: ");
                        op1= read.next().toLowerCase();
                    }

                    if(op1.equals("a")) 
                    {
                        int indPeli =0;
                        int indRutPeli = buscarIndice(rutInicio,rutStatus);
                        System.out.println("\n  COMPRAR ENTRADA\n");
                        System.out.print("Ingresa el nombre de la pelicula: ");
                        String peli = read.nextLine();
                        peli = read.nextLine();
                        
                        while (buscarIndice(peli,pelicula) == -1) 
                        {
                            System.out.println("\n--- El nombre ingresado no se encuentra en cartelera ---\n");
                            System.out.print("Ingresa el nombre de la pelicula: ");
                            peli = read.nextLine();
                        }
                        indPeli = buscarIndice(peli,pelicula);
                        
                        
                        if (!desplegarHorario(peli,horario).equals(""))
                        {
                            System.out.println(desplegarHorario(peli,horario));
                            System.out.print("\nIngrese el numero de la sala: ");
                            int sala = read.nextInt();
                            System.out.print("Ingrese el horario de la sala, mañana o tarde: ");
                            String hora = read.next().toUpperCase();
                            int[][] salaSelec = seleccionar(sala1M,sala1T ,sala2M,sala2T,sala3M,sala3T,sala,hora,letras);
                            System.out.print("Ingrese el numero de entradas a comprar: ");
                            int cantEntradas = read.nextInt();
                            String entrada ="";
                            for(int i=0;i<cantEntradas;i++) 
                            {
                                System.out.print("Ingrese el asiento: ");
                                entrada = read.next().toUpperCase();
                                while (!comprobarEntrada(entrada,salaSelec,letras))
                                {
                                    System.out.println("\n--- No se cumple el distanciamiento social necesario (1 asiento) o se encuentra ocupado ---\n");
                                    System.out.print("Ingrese el asiento: ");
                                    entrada = read.next().toUpperCase();
                                }
                                
                            }
                            int compra = calcularCompra(cantEntradas,indPeli,estreno,estado,indRutPeli);
                            System.out.println("\nTotal de la compra: $" + compra);
                            System.out.print("\nEsta seguro de realizar la compra: ");
                            String respuestaA = read.next().toUpperCase();
                            
                            while (!respuesta.equals("SI") && !respuesta.equals("NO")) 
                            {
                                System.out.println("\n --- Respuesta Inválida ---\n");
                                System.out.print("\nEsta seguro de realizar la compra: ");
                                respuestaA = read.next().toUpperCase();
                            }
                            
                            if (respuesta.equals("SI")) 
                            {
                                if (saldo[indRut] < compra) 
                                {
                                    System.out.println("\n --- Saldo insuficiente para realizar la compra --- \n");
                                    System.out.print("¿Desea cargar saldo a su cuenta? : ");
                                    String respSaldo = read.next().toUpperCase();
                                    
                                    while (!respSaldo.equals("SI") && !respSaldo.equals("NO")) 
                                    {
                                        System.out.println("\n --- Respuesta Inválida ---\n");
                                        System.out.print("¿Desea cargar saldo a su cuenta? : ");
                                        respSaldo = read.next().toUpperCase();
                                    }
                                    
                                    if(respSaldo.equals("SI")) 
                                    {
                                        System.out.print("Ingrese la cantidad a cargar: ");
                                        saldo[indRut] += read.nextInt();
                                        System.out.println("\nSaldo cargado con exito, su nuevo saldo es: $" + saldo[indRut]);
                                        confirmarCompra(recaudacion,recaudadoDia,recaudadoXHorario,indPeli,peli ,hora,entrada,cantEntradas,saldo,indRut,compra,nombrePelicula,horarioPelicula,asientosPelicula,indice);
                                        indice++;
                                        System.out.println("\n --- LA COMPRA HA SIDO REALIZADA CON EXITO ---\n");
                                    }
                                    else 
                                    {
                                        System.out.println("\n --- LA COMPRA A SIDO CANCELADA --- \n    ");
                                    }
                                }
                                
                                else 
                                {
                                    confirmarCompra(recaudacion,recaudadoDia,recaudadoXHorario,indPeli,peli ,hora,entrada,cantEntradas,saldo,indRut,compra,nombrePelicula,horarioPelicula,asientosPelicula,indice);
                                    indice++;
                                    System.out.println("\n --- LA COMPRA HA SIDO REALIZADA CON EXITO ---\n");
                                }    

                            }
                            else 
                            {
                                System.out.println("\n --- LA COMPRA A SIDO CANCELADA --- \n    ");
                            }
                                
                        }
                        else 
                        {
                            System.out.println("La pelicula indicada no se encuentra en la cartelera");
                        }


                    }

                    else if(op1.equals("b")) 
                    {
                        System.out.println("\n  INFORMACIÓN USUARIO\n");
                        System.out.println(informacionCliente(indRut,nombre,apellido,rut,saldo,nombrePelicula,horarioPelicula,asientosPelicula));
                        
                    }

                    else if(op1.equals("c")) 
                    {

                    }

                    else if (op1.equals("d")) 
                    {
                        System.out.println("\n CARTELERA\n");
                        System.out.println(desplegarCartelera(horario));
                    }

                }    
            }
            
            // MENU ADMIN
            
            else 
            {
                String op2 ="";
                while(!op2.equals("c")) 
                {
                    System.out.println("\n      MENU ADMIN\n    \na)Taquilla \nb)Información cliente \nc)Cerrar sesion\n");
                    System.out.print("Ingrese una opcion: ");
                    op2= read.next().toLowerCase();
                    while (!op2.equals("a") && !op2.equals("b") && !op2.equals("c")) 
                    {
                        System.out.println("\n--- Opción ingresada incorrecta ---");
                        System.out.print("Ingrese una opcion: ");
                        op2= read.next().toLowerCase();
                    }
                    
                    if(op2.equals("a"))
                    {
                        System.out.println("\n  TAQUILLA\n");
                        System.out.println(desplegarTaquilla(pelicula,recaudacion,recaudadoDia,recaudadoXHorario));
                    }
                    
                    else if(op2.equals("b")) 
                    {
                        System.out.println("\n  INFORMACIÓN CLIENTE\n");
                        System.out.print("Ingrese el rut del cliente: ");
                        String rutCliente = listatoString(sinSignos(read.next()));
                        
                        while (buscarIndice(rutCliente,rut) == -1) 
                        {
                            System.out.println("\n--- El rut ingresado no se encuentra en los datos ---\n");
                            System.out.print("Ingrese el rut del cliente: ");
                            rutCliente = listatoString(sinSignos(read.next()));
                        }
                        int indCliente = buscarIndice(rutCliente,rut);
                        System.out.println(informacionCliente(indCliente,nombre,apellido,rut,saldo,nombrePelicula,horarioPelicula,asientosPelicula));
                    }
                    
                }    
            }
            
            
            System.out.println("Ha cerrado sesion con exito!");
            System.out.print("Desea cerrar el sistema? (SI) (NO): ");
            respuesta = read.next().toUpperCase();
        
            while (!respuesta.equals("SI") && !respuesta.equals("NO")) 
            {
                System.out.println("\n--- El texto ingresado es incorrecto ---");
                System.out.print("\nDesea cerrar el sistema? (SI) (NO): ");
                respuesta = read.next().toUpperCase();
            }
            
        } // FIN DEL CIERRE DE SISTEMA
        
    }
    
}
